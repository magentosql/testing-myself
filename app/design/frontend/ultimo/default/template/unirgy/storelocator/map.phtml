<?php
/**
 * Unirgy_StoreLocator extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 *
 * @category   Unirgy
 * @package    Unirgy_StoreLocator
 * @copyright  Copyright (c) 2008 Unirgy LLC
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

/**
 * @category   Unirgy
 * @package    Unirgy_StoreLocator
 * @author     Boris (Moshe) Gurevich <moshe@unirgy.com>
 */
/* @var $this Unirgy_StoreLocator_Block_Map */
?>
<?php
$_showMap = Mage::getStoreConfig('ustorelocator/general/show_map');
$_showSearch = Mage::getStoreConfig('ustorelocator/general/show_search');
$_defaultLocation = Mage::getStoreConfig('ustorelocator/general/default_location');
$_defaultRadius = Mage::getStoreConfig('ustorelocator/general/default_radius');
$_minZoom = Mage::getStoreConfig('ustorelocator/general/min_zoom');
$_scale_icon = Mage::getStoreConfig('ustorelocator/general/scale_icon');
$_initialLocations = '{}';

if ($_showMap) {
    $collection = $this->getSlHelper()->getDefaultCollection();
    $this->setCollection($collection);
    $_initialLocations = Zend_Json::encode($this->getSlHelper()->prepareLocationData($collection->getData()));
}

$_units = Mage::getStoreConfig('ustorelocator/general/distance_units');
$_searchRadiuses = explode(',',Mage::getStoreConfig('ustorelocator/general/search_radius_options'));
$_locale = Mage::getStoreConfig('general/country/default');
$_no_result = $this->getSlHelper()->getNoResultCoordinates();
$addressSearch = false;

?>

<?php if(isset($_POST['address-to-find'])): ?>
<?php $addressSearch = $_POST['address-to-find']; ?>
<script type="text/javascript">
	
	jQuery(function(){
		jQuery('#store_locator_form input.input-text').val('<?php echo $addressSearch; ?>');
	});
	
</script>
<?php endif; ?>

<script src="http://maps.googleapis.com/maps/api/js?sensor=false" type="text/javascript"></script>
<!--<script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=--><?php //echo $_apiKey ?><!--" type="text/javascript"></script>-->
<!--<script type="text/javascript" src="--><?php //echo Mage::getBaseUrl()?><!--/js/storelocator/map.js"></script>-->

<script type="text/javascript">
var ex;
(function(){
    var storeLocator = new UnirgyStoreLocator({
        mapEl: $('find-store-map-area'),
        sidebarEl: $('find-store-map-results'),
        searchUrl: '<?php echo $this->getUrl('ustorelocator/location/searchJson')?>',
        // searchUrl: '<?php echo $this->getUrl('ustorelocator/location/search')?>',
        scale_icon: <?php echo $_scale_icon;?>,
        initial_locations:  <?php echo isset($_initialLocations) ? $_initialLocations: '{}';?>,
        min_zoom: <?php echo $_minZoom;?>,
        defaultLocation: '<?php echo addslashes($_defaultLocation);?>',
        units: '<?php echo $_units;?>',
        region: '<?php echo $_locale;?>',
        route_not_found: '<?php echo $this->__("Could not find route between these locations.");?>',
        show_all_text: '<?php echo $this->__("Show all");?>',
        no_result_error: '<?php echo $this->__('No results found.');?>',
        invalid_address_text: '<?php echo $this->__('Search does not seem to be valid address.');?>',
        no_result: new google.maps.LatLng('<?php echo $_no_result[0];?>','<?php echo $_no_result[1];?>'),
        tag_row_label: '<strong><?php echo $this->__('Filter Map by Tag')?>: </strong>',
        generateSidebarHtml: function(m) {
            var container = new Element('div');
            var div = new Element('div', {id: "loc-" + m.location_id}).addClassName('sidebar-entry');
            if(m.is_featured === true) {
                div.addClassName('featured');
            }
            //If there's a distance, print title span with distance
            if(m.distance) {
				div.insert(new Element('span').addClassName('title').update(m.title + '<span class="spacer">|</span>Distance ' + parseFloat(m.distance).toFixed(1) + ' miles'));
            } else {
	            div.insert(new Element('span').addClassName('title').update(m.title));
            }
            
            div.insert('<address>'+m.address_display.replace(/\n/, '<br/>')+'</address>');
            if(m.phone) {
                div.insert('<span class="phone">' + m.phone + '</span>');
            }
            
            var url = '';
            if(m.website_url){
                url = m.website_url.replace(/\s/,'');
                div.insert('<span class="website">' + url + '</span>');
            }

            container.insert(div);
            return  container.innerHTML;
        },
        generateDirectionsElement: function(m) {
            var directionsDiv = new Element('div', {id: "directions-" +  m.location_id}).addClassName("directions");
            var btnSpan = new Element('span', {id: "get-dir-btn-container-" +  m.location_id});
            btnSpan.className = "get-dir-btn-container";
            var a = new Element('a',{id: 'get-dir-' + m.location_id}).update("<?php echo $this->__("Get directions");?>");
            a.addClassName("dir-btn");
            btnSpan.insert(a);
            directionsDiv.insert(btnSpan); // directions buttons
            directionsDiv.insert(new Element('div', {"style" : "display: none"}).addClassName("step-directions")); // this is where step by step directions should be
            return directionsDiv;
        },
        generateMarkerHtml: function(m) {
            var url = '';
            if(m.website_url){
                url = m.website_url.replace(/\s/,'');
            }
            var container = new Element('div');
            var div = new Element('div', {id: "marker-loc-" + m.location_id}).addClassName("marker-entry");
            if(m.is_featured) {
                div.addClassName('featured');
            }
            div.insert('<b>' + m.title + '</b> <br/>').insert(m.address_display.replace(/\n/, '<br/>') + '<br/>');
            if(m.phone && m.phone.length > 5) {
                div.insert(m.phone + '<br/>');
            }
            if(url.length > 5) {
                div.insert('<a href="' + (url.match(/@/) ? 'mailto:' : '') + url + '"><strong>' + url + '</strong></a><br/>')
            }
            div.insert('<p>' + m.notes + '</p>');
            container.update(div);
            return  container.innerHTML;
        }
    });

    Event.observe(window, 'load', function () {
        storeLocator.load();

<?php if ($_initialLocations && $_initialLocations != '{}'): ?>
        $('storelocator-results').style.visibility = 'visible';
<?php endif ?>
    }); 

//Standard form submit event
Event.observe($('store_locator_form'), 'submit', function() {
    storeLocator.search($('address').value, {
        radius: $('radius').value
        /*, type: $('product_type').value*/
    });
});

//Submit form with _POST from footer
<?php if($addressSearch): ?>
Event.observe(window, 'load', function() {
	storeLocator.search($('address').value, {
        radius: $('radius').value
        /*, type: $('product_type').value*/
    });
});
<?php endif; ?>

})();
</script>