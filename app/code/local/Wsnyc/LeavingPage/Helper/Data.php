<?php

class Wsnyc_LeavingPage_Helper_Data extends Mage_Core_Helper_Abstract {

    const XML_CONF_LENGTH = 'promo/leavingpage/length';
    const XML_CONF_PREFIX = 'promo/leavingpage/prefix';
    const XML_CONF_SUFFIX = 'promo/leavingpage/suffix';
    const XML_CONF_RULE = 'promo/leavingpage/rule_id';

    public function generatePromoCode() {
        $code = Mage::getSingleton('customer/session')->getLeavingPageCoupon();
        if (!$code || !$this->_isCouponStillActive($code)) {
            $code = $this->_getNewCoupon();
            Mage::getSingleton('customer/session')->setLeavingPageCoupon($code);
        }
        
        return $code;
    }

    public function couponUsed() {

        $used = false;

        if (Mage::getSingleton('checkout/session')->getCouponCodeParamValue()) {
            $used = true;
        }

        $rules = explode(',', Mage::getSingleton('checkout/session')->getQuote()->getAppliedRuleIds());
        if (in_array(Mage::getStoreConfig(Wsnyc_LeavingPage_Helper_Data::XML_CONF_RULE), $rules)) {
            $used = true;
        }

        if ($used) {
            //remove saved code from session
            Mage::getSingleton('customer/session')->unsLeavingPageCoupon();
        }

        return $used;
    }

    protected function _getNewCoupon() {
        $rule = Mage::getModel('salesrule/rule')->load(Mage::getStoreConfig(self::XML_CONF_RULE));

        $generator = Mage::getModel('salesrule/coupon_massgenerator');
        $generator->setFormat(Mage_SalesRule_Helper_Coupon::COUPON_FORMAT_ALPHANUMERIC);
        $generator->setDash(null);
        $generator->setLength(Mage::getStoreConfig(self::XML_CONF_LENGTH));
        $generator->setPrefix(Mage::getStoreConfig(self::XML_CONF_PREFIX));
        $generator->setSuffix(Mage::getStoreConfig(self::XML_CONF_SUFFIX));

        $rule->setCouponCodeGenerator($generator);
        $rule->setCouponType(Mage_SalesRule_Model_Rule::COUPON_TYPE_AUTO);

        $coupon = $rule->acquireCoupon();
        $coupon->setType(Mage_SalesRule_Helper_Coupon::COUPON_TYPE_SPECIFIC_AUTOGENERATED)->save();
        $code = $coupon->getCode();

        return $code;
    }

    protected function _isCouponStillActive($code) {
        $coupon = Mage::getModel('salesrule/coupon')->load($code, 'code');

        return $coupon->getId() != null;
    }

}
