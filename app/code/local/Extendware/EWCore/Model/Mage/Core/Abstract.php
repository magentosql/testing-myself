<?php /*obfv1*/
// Copyright © 2015 Extendware
// Are you trying to customize your extension? Contact us (http://www.extendware.com/contacts/) and we can help!
// Please note, not all files are encoded and different extensions have different levels of encoding.
// We are always happy to provide guideance if you are experiencing an issue!



/**
 * Below are methods found in this class
 *
 * @method mixed public __()
 * @method mixed public __call($method, $args)
 * @method mixed public __construct()
 * @method mixed public _afterLoadFromCollection()
 * @method mixed public addPermissionsFor($groups, $permissions)
 * @method mixed public allowAllPermissionsFor($groups)
 * @method mixed public dataHasChangedFor($field)
 * @method mixed public doTriggerAfterLoadFromCollection()
 * @method mixed public existingDataHasChangedFor($field)
 * @method mixed public exists($id, $field = null)
 * @method mixed public existsByData(array $params)
 * @method mixed public getDataIfSetOr($key, $default)
 * @method mixed public getDataOptionModel($key)
 * @method mixed public getPermissions()
 * @method mixed public hasDataOptionModel($key)
 * @method mixed public isAgentTrusted()
 * @method mixed public isDataChangedFor($fields)
 * @method mixed public isDataEmptyFor($fields, $type = 'mixed')
 * @method mixed public isExistingDataChangedFor($fields)
 * @method mixed public isUniqueByData(array $params)
 * @method mixed public isUniqueByFields($fields)
 * @method mixed public load($id, $field=null)
 * @method mixed public loadByData(array $params)
 * @method mixed public loadById($id, $field=null)
 * @method mixed public removePermissionsFor($groups, $permissions)
 * @method mixed public searchReplaceFieldValues($fields, $fromData, $toData)
 * @method mixed public setAgentIsTrusted($bool)
 * @method mixed static public setIsSecureArea($bool)
 * @method mixed public setPermissionsFor($groups, $permissions)
 * @method mixed public unsetPermissionsFor($groups)
 *
 */

$_F=__FILE__;$_X="";$_D=strrev("edoced" . "_46esab");eval(gzuncompress($_D($_X)));
